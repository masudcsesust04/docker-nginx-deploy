worker_processes  1;

events {
  worker_connections  4096;  ## Default: 1024
}

http {

  # define where Nginx should write its logs
  access_log /var/www/app_name/log/nginx.access.log;
  error_log /var/www/app_name/log/nginx.error.log; # only for critical error 'crit'

  # to boost I/O on HDD we can disable access logs
  # access_log off;

  server {
    listen 80;
    server_name my-site.com default_server;

    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl default_server;
    server_name my-site.com;

    ssl_protocols TLSv1.2 TLSv1.1;
    ssl_certificate         /etc/nginx/my-site.com.crt;
    ssl_certificate_key     /etc/nginx/my-site.com.key;
    ssl_prefer_server_ciphers on;

    # add_header Access-Control-Allow-Origin *;

    client_max_body_size 100M;
    client_body_buffer_size 128k;

    include  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # define the public application root
    root   /var/www/app_name/public;
    index  index.html;

    # deny requests for files that should never be accessed
    location ~ /\. {
      deny all;
    }

    location ~* ^.+\.(rb|log)$ {
      deny all;
    }

    # serve static (compiled) assets directly if they exist (for rails production)
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system|uploads)/   {
      try_files $uri @app_name;
      access_log off;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
    }

    resolver 127.0.0.11 valid=5s;
    # send non-static file requests to the app server
    location / {
      gzip_static on;
      try_files $uri index.html $uri.html @app_name;
    }

    location @app_name {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_http_version 1.1;
      proxy_redirect off;
      proxy_read_timeout 120;
      proxy_send_timeout 120;
      proxy_pass http://app:3000;
    }
  }

  # add another server block here
}

